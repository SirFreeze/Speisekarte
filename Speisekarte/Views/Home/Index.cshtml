@using Speisekarte.Data.Classes;
@using Speisekarte.Data.Enum;
@model Speisekarte.Models.Home.HomeModel
@{
    ViewBag.Title = "Speisekarte";
}
<script>
    var Costs = 0;
    var Items = [];

    $(document).ready(function () {
        RefreshCard();
    })

    function AddMenuToCard(name, cost) {
        var item = new Object();
        item.Name = name;
        item.Cost = cost;
        Items.push(item);
        RefreshCard();
    }

    function RefreshCosts() {
        Costs = 0;
        $(Items).each(function (index, item) {
            Costs += item.Cost;
        })
        $("#allCosts").text(Costs);
    }

    function RefreshItems() {
        var table = $("#itemTable");
        $("#itemTable tr").remove();
        $(Items).each(function (index, item) {
            var row = $('<tr>');
            var nameTd = $('<td>').text(item.Name);
            var costTd = $('<td>').text(item.Cost + "€");
            var removebtn = $('<button>').addClass("btn btn-danger").append($('<span>').addClass("glyphicon glyphicon-remove"));
            removebtn.css("margin-top", "10px");
            removebtn.click(function () {
                Items.splice(Items.indexOf(item.Name), 1);
                RefreshCard();
            })
            $(row).append(nameTd);
            $(row).append(costTd);
            $(row).append(removebtn);
            $(table).append(row);
        })
    }

    function RefreshCard() {
        RefreshCosts();
        RefreshItems();
        $("#cartAmount").text(Items.length);
    }
</script>
<h1>Speisekarte</h1>
<hr />
<div class="row">
    @foreach (NonContextMenu menu in Model.Menus)
    {
        <div class="col-md-4">
            <h2>@menu.Name</h2>
            <p><i>@menu.Description</i></p>
            <p>Vorspeise: @String.Join(", ", menu.Meals.Where(x => x.Type == MealType.Appetizer.ToString()).Select(x => x.Name))</p>
            <p>Hauptgang: @String.Join(", ", menu.Meals.Where(x => x.Type == MealType.MainCourse.ToString()).Select(x => x.Name))</p>
            <p>Nachspeise: @String.Join(", ", menu.Meals.Where(x => x.Type == MealType.Dessert.ToString()).Select(x => x.Name))</p>
            <p>Trinken: @String.Join(", ", menu.Drinks.Select(x => x.Name))</p>
            <input type="button" class="btn btn-success" value="@menu.Cost €" onclick="AddMenuToCard('@menu.Name', @menu.Cost)" />
        </div>
    }
</div>
<nav class="navbar navbar-default navbar-fixed-bottom">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#example-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Bestellung</a>
        </div>
        <div class="collapse navbar-collapse" id="example-1">
            <ul class="nav navbar-nav">
                <li><a>Gesammtpreis: <span id="allCosts"></span>€</a></li>
                <li>
                    <div class="btn-group dropup">
                        <button style="margin-top: 8px" type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Warenkorb (<span id="cartAmount"></span>)
                        </button>
                        <div class="dropdown-menu" id="itemDropdown" style="width:300px; max-height:300px; overflow-y:auto">
                            <table class="table" id="itemTable">
                                <thead></thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </li>
            </ul>
        </div>

    </div>
</nav>